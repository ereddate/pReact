var newForm = pReact.createClass({
	getInitData: function(success, error){
		var _ = this;
		pReact.jsonp("url").done(function(data){
			_.data ={nameValue: "帐号：请输入...", passwordValue:"密码：请输入...", submitText: "submit button", num: "true"}; 
			success(_.data);
		}, function(){
			error();
		});
	},
	handleSubmit: function(e){
		e.preventDefault();
		var form = document.getElementById("test"),
			name = form.name,
			nameIs = true,
			password = form.password,
			passwordIs = true;
		if (pReact.trim(name.value) == "") {
			name.style.cssText = "border:1px red solid";
			nameIs = false;
			return;
		}else{
			name.style.cssText = "";
		}
		if (pReact.trim(password.value) == "") {
			password.style.cssText = "border:1px red solid";
			passwordIs = false;
			return;
		}else{
			password.style.cssText = "";
		}
		if (nameIs && passwordIs){
			var p = $.param([name, password]);
			pReact.jsonp(form.action+"?"+p).done(function(data){
				console.log(data)
			}, function(){
				console.log("error")
			});
		}
	},
	handleBlur: function(e){
		if (pReact.trim(this.elem.value) != ""){
			this.elem.style.cssText = "";
		}else{
			this.elem.style.cssText = "border:1px red solid";
		}
	},
	render: function(){
		var cQ = "{{ submitText | capitalize }}";
		return (
			<style>
				input,button{display:block;margin:10px 0;}
				.form{margin:10px auto;text-align: center;width:300px;}
				.submit_button{padding:5px;border:0;border-radius: 5px;}
			</style>
			<div class="form clearFx">
				<form id="test" action="" onSubmit="{{ this.handleSubmit }}">
					<input type="text" name="name" placeholder="{{ nameValue }}" onBlur="{{ this.handleBlur }}" value="" />
					<input type="password" name="password" placeholder="{{ passwordValue }}" onBlur="{{ this.handleBlur }}" value="" />
					<button type="submit" class="submit_button">{{ $cQ }}</button>
				</form>
			</div>
		)
	},
	b: 1
});
pReact && pReact.renderDom(
	<newForm />,
	document.getElementById("main")
);
var newList = pReact.createClass({
	getInitData: function(success, error){
		pReact.jsonp("url").done(function(data){
			pReact.each(data, function(i,item){
				pReact.extend(data[i], {
					img: item.img.split(/\.[jpg|gif|png]/)[0]+".jpg"
				});
				pReact.extend(data[i].data, data[i]);
			});
			success(data);
		}, function(){
			error();
		});
	},
	render: function(){
		return (
			<div class="form clearFx">
				<ul>
					{{ for (var i=0;i<data.length;i++) }}
						{{ if ('{{ media }}'.length > 8) }}
							<li id="{{ id }}">1<a href="{{ url }}" target="_blank"><img src="{{ img }}" /></a><div><h2><a href="{{ url }}" target="_blank">{{ title | limitTo : 8 }}...</a></h2>{{ media | limitTo : 4 }}... {{ time }}</div></li>
						{{ else if ('{{ media }}'.length >= 2 && '{{ media }}'.length <= 4) }}
							<li id="{{ id }}">2<a href="{{ url }}" target="_blank"><img src="{{ img }}" /></a><div><h2><a href="{{ url }}" target="_blank">{{ title | limitTo : 8 }}...</a></h2>{{ media | limitTo : 5 }}... {{ time }}</div></li>
						{{ else }}
							<li id="{{ id }}">3<a href="{{ url }}" target="_blank"><img src="{{ img }}" /></a><div><h2><a href="{{ url }}" target="_blank">{{ title | limitTo : 8 }}...</a></h2>{{ media | limitTo : 4 }}... {{ time }}</div></li>
						{{ end if }}
					{{ end for }}
				</ul>
			</div>
		)
	},
	b: 1
});
pReact && pReact.renderDom(
	<newList />,
	document.getElementById("main")
);
typeof jQuery != "undefined" && (function(win, $, _){
	var AddNum = _.createClass({
		num: 0,
		handleClick: function(){
			this.num=0;
			$("#num").html(this.num);
		},
		handleClickA: function(){
			this.num+=1;
			$("#num").html(this.num);
		},
		handleClickB: function(){
			this.num-=1;
			this.num<0 && (this.num = 0);
			$("#num").html(this.num);
		},
		clickCount:0,
		domloadHandle: function(){
			var num = this.clickCount++;
			var XnewForm = pReact.extend({}, newForm);
			XnewForm.getInitData = function(success, error){
				success(this.data);
			};
			XnewForm.handleSubmit = function(e){
				e.preventDefault();
				_.promise.when(function(resolve, reject){
					_.jsonp("url").done(function(data){
						resolve(data);
					}, function(){
						reject("error");
					});
				}).done(function(data){
					console.log(data)
				}).fail(function(data){
					console.log(data)
				});
			};
			XnewForm.render = function(){
				return (
					<style>
						input,button{display:block;margin:10px 0;}
						.form{margin:10px auto;text-align: center;width:300px;}
						.submit_button{padding:5px;border:0;border-radius: 5px;}
					</style>
					<div class="form clearFx">
						{{ if ({{ num }} === "false") }}
							<form id="test" action="" onSubmit="{{ this.handleSubmit }}">
								<input type="text" name="name" placeholder="{{ nameValue }}" value="" />
								<input type="password" name="password" placeholder="{{ passwordValue }}" value="" />
								<button type="submit" class="submit_button">Xsubmit{{ $num }}-1</button>
							</form>
						{{ else }}
							<form id="test" action="" onSubmit="{{ this.handleSubmit }}">
								<input type="text" name="name" placeholder="{{ nameValue }}" value="" />
								<input type="password" name="password" placeholder="{{ passwordValue }}" value="" />
								<button type="submit" class="submit_button">Xsubmit{{ $num }}-2</button>
							</form>
						{{ end if }}
					</div>
				)
			};
			pReact.renderDom(
				<XnewForm />, 
				document.getElementById("newform")
			);
		},
		render: function(){
			var a = "view",
				cE = "增 加",
				cD = "减 少",
				cQ = "清 零",
				num = this.num;
			return (
				<style>
					.view{margin:10px;}
					.view a{border:1px solid rgb(165,42,42);border-radius: 10px;padding:5px;text-decoration: none;margin:0 5px 0;}
					.view span{vertical-align: middle;margin:0 5px 0;}
					.view .bignum{color:red;font-size:20px;font-weight: 700;}
				</style>
				<div class="view"><p class="a" title="{{ title | filter : 'e' }}"><span>{{ date }}, {{ $a }} {{ name | capitalize }}</span><span id="num" class="bignum">{{ $num }}</span></p><a href="javascript:;" onClick="{{ this.handleClickA }}">{{ $cE }}</a><a href="javascript:;" onClick="{{ this.handleClickB }}">{{ $cD }}</a><a href="javascript:;" onClick="{{ this.handleClick }}">{{ $cQ }}</a></div>
				<button onClick="{{ this.domloadHandle }}">add newForm</button>
				<div id="newform"></div>
			);
		}
	});
	_.renderDom(
		<AddNum {name:'的 num 等于', title:'testeeee', date:(new Date()).getFullYear()} />, 
		$('#main')[0]
	);
})(this, jQuery, pReact);
class testEs6{
	getInitData(success, error){
		pReact.jsonp("url").done(function(data){
			success({a:"testEs6"});
		}, function(){
			error();
		});
	}
	divHandle(e){
		e.preventDefault();
		document.getElementById("nohandle").innerHTML = "div click!";
	}
	buttonHandle(e){
		e.preventDefault();
		this.elem.innerHTML = "no handle";
	}
	render(){
		let a = "testEs6-a";
		return (
			<style>
				.testes6{cursor: pointer;}
				.testes6:hover{background-color: red;}
			</style>
			<div class="testes6" onClick="{{ this.divHandle }}">{{ a }} {{ $a }}</div>
			<button id="nohandle" onClick="{{ this.buttonHandle }}">no handle</button>
		)
	}
}
pReact && pReact.renderDom(
	<testEs6 />,
	document.getElementById("main")
);
