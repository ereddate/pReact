var tip = pReact.createClass("tip", {
	closeClick: function(e){
		e.preventDefault();
		pReact.jq("#tip").remove();
	},
	render: function(){
		var dom = document.getElementById("tip");
			dom && dom.parentNode.removeChild(dom);
		return (
			<article id="tip" class="tip {{ direction }}">
				<style>
					.tip{
						position:fixed;
						left:0;
						right:0;
						background:rgba(0,0,0,.8);
						z-index:99997;
						min-height:2.3957rem;
						color:rgb(255,255,255);
					}
					.tip header h1, .tip header p{
						font-size:.7728rem;
						margin:0 0.3864rem;
						line-height:1.5rem;
					}
					.top{
						top:1.7002rem;
					}
					.bottom{
						bottom:0;
					}
					.tip_close{
						position:absolute;
						top:.3863rem;
						right:.3863rem;
						text-decoration:none;
						font-size:.8rem;
						color:rgb(255,255,255);
					}
					.tip_contents{
						padding:0 0.3863rem;
					}
					.fullscreen{
						top:0;
						left:0;
						right:0;
						bottom:0;
						background:rgba(105,105,105,1);
					}
					.fullscreen .tip_contents{
						overflow:scroll;
						overflow-x:hidden;
					    position: absolute;
					    left: 0;
					    right: 0;
					    bottom: 0;
					    top: 1.5456rem;
						color:rgb(0,0,0);
					    background:rgba(255,255,255,1);
					}
				</style>
				<header>
					<h1>{{ title }}</h1>
					<p>{{ desc | limitTo : 30 }}</p>
					<a href="javascript:;" class="tip_close icon-close" onClick="{{ this.closeClick }}"></a>
				</header>
				<div class="tip_contents<?pjs if ({{ showContents }} != true) ?> hide<?pjs end if ?>">
					{{ alldesc }}
				</div>
			</article>
		);
	}
});